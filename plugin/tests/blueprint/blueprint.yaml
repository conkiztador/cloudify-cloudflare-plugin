# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_3

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/4.0/types.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - plugin/test_plugin.yaml

inputs:
    name:
      type: string

    ip:
      type: string

    cloudflare_email:
      type: string

    cloudflare_key:
      type: string

    cloudflare_domain_name:
      type: string


dsl_definitions:
  cloudflare_config: &cloudflare_config
    email: { get_input: cloudflare_email }
    domain_name: { get_input: cloudflare_domain_name }
    key: { get_input: cloudflare_key }

node_templates:
    lab_vm:
      type: cloudify.nodes.Compute
      properties:
        agent_config:
          install_method: none
        ip: { get_input: ip }

    # defining a single node template that will serve as our test node
    test_node_template:
        type: cloudify.nodes.Root
        properties:
          cloudflare_config: *cloudflare_config
        interfaces:
            cloudify.interfaces.lifecycle:
                start:
                    implementation: cloudflare.plugin.tasks.update_record
                    inputs:
                        name: { get_input: name  }
                        ip: { get_property: [lab_vm, ip] }

# outputs:
#     # example output the could be used to simplify assertions by test
#     test_output:
#         description: an output for the test
#         value: { get_attribute: [test_node_template, result] }
